server:
  port: ${PORT}

spring:
  application:
    name: wjhs

  mvc:
    pathmatch:
      # 配置策略(swagger文档<https://doc.xiaominfo.com/docs/quick-start>)
      matching-strategy: ant-path-matcher

  profiles:
    active: dev

  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://${MYSQL_ADDRESS}/${MYSQL_DATABASE}?serverTimezone=Asia/Shanghai&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
      username: ${MYSQL_USER_NAME}
      password: ${MySQL_PASSWORD}

  # redis 配置
  redis:
    port: ${REDIS_PORT}
    host: ${REDIS_HOST}

  flyway:
    # 是否启用flyway
    enabled: true
    # 编码格式，默认UTF-8
    encoding: UTF-8
    # 迁移sql脚本文件存放路径，默认db/migration
    locations: classpath:db/migration
    # 迁移sql脚本文件名称的前缀，默认V
    sql-migration-prefix: V
    # 迁移sql脚本文件名称的分隔符，默认2个下划线__
    sql-migration-separator: __
    # 迁移sql脚本文件名称的后缀
    sql-migration-suffixes: .sql
    # 迁移时是否进行校验，默认true
    validate-on-migrate: true
    # 当迁移发现数据库非空且存在没有元数据的表时，自动执行基准迁移，新建schema_version表
    baseline-on-migrate: true

  # 文件上传配置
  servlet:
    multipart:
      # 单个文件大小限制
      max-file-size: 5MB
      # 一次请求中所有上传文件总大小限制
      max-request-size: 20MB


mybatis:
  # 将包内的映射器接口实现全部注册为映射器
  type-aliases-package: com.ilovesshan.wjhs.beans

  # 配置mybatis的mapper路径
  mapper-locations: classpath:mapper/*.xml

  configuration:
    # 是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。
    map-underscore-to-camel-case: true
    # 指定 MyBatis 所用日志的具体实现，未指定时将自动查找
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


# 日志打印级别
logging:
  level:
    wjhsService: debug
    wjhsTaskService: debug

  group:
    wjhsService: com.ilovesshan.wjhs.service
    wjhsTaskService: com.ilovesshan.wjhs.core.task

